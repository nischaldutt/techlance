import React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { Divider, message, Steps, Button, Result } from "antd";

import { useAuthContext } from "@/contexts";
import { URL_CONSTANTS } from "@/constants";

import BasinInfo from "@/pages/business/registration/formSteps/BasicInfo";
import InsuranceInfo from "@/pages/business/registration/formSteps/InsuranceInfo";
import ReferenceInfo from "@/pages/business/registration/formSteps/ReferenceInfo";
import SelectServices from "@/pages/business/registration/formSteps/SelectServices";

import { Footer } from "@/components";

export default function BusinessRegistration() {
  const router = useRouter();
  const { isTokenPresent } = useAuthContext();

  React.useEffect(() => {
    if (!isTokenPresent) {
      router.push(URL_CONSTANTS.BUSINESS.AUTH.LOGIN);
    }
  }, [router, isTokenPresent]);

  const [formStage, setFormStage] = React.useState(0);
  const [isDone, setIsDone] = React.useState(false);

  function next() {
    return setFormStage((formStage) => formStage + 1);
  }

  function previous() {
    return setFormStage((formStage) => formStage - 1);
  }

  function done() {
    // todo: perform clean up using removeQueries after the last step of business creation
    setIsDone(true);
  }

  const steps = [
    {
      title: "Basic Info",
      content: <BasinInfo next={next} />,
    },
    {
      title: "Insurance Info",
      content: <InsuranceInfo previous={previous} next={next} />,
    },
    {
      title: "References",
      content: <ReferenceInfo previous={previous} next={next} done={done} />,
    },
    {
      title: "Select Services",
      content: <SelectServices previous={previous} done={done} />,
    },
  ];

  const items = steps.map((item) => ({
    key: item.title,
    title: item.title.toUpperCase(),
  }));

  return (
    <>
      <Head>
        <title>TechLance</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex flex-col justify-between min-h-[100vh]">
        <main className="my-8 flex flex-col justify-between w-[90%] xl:w-[70%] 2xl:w-3/5 mx-auto text-gray-900">
          <h1 className="text-lg lg:text-3xl font-bold py-4">
            Business On-Boarding
          </h1>

          <Divider className="my-2" />

          {!isDone ? (
            <section className="flex flex-col md:flex-row">
              <div className="">
                <Steps
                  direction="vertical"
                  size="small"
                  className="font-bold pt-2"
                  current={formStage}
                  items={items}
                />
              </div>

              <div className="md:ml-[10vw]">{steps[formStage].content}</div>
            </section>
          ) : (
            <Result
              status="success"
              title="Congratulation! Business Registration Successfull"
              subTitle="Cloud server configuration takes 1-5 minutes, please wait."
              extra={[
                <Button type="primary" key="console">
                  Business Dashboard
                </Button>,
                <Button key="buy">Techlance Home</Button>,
              ]}
            />
          )}
        </main>

        <Footer />
      </div>
    </>
  );
}
